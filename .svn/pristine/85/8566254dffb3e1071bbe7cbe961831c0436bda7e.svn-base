package com.vetrack.vetrack;

import android.Manifest;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.support.v4.app.ActivityCompat;
import android.support.v4.content.ContextCompat;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;

import java.io.IOException;

import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;

public class MainActivity extends AppCompatActivity implements View.OnClickListener {

    private static final int REQUEST_CODE = 1;
    private static final String TAG = "MainActivity";
    private static String[] PERMISSIONS = {
            Manifest.permission.READ_EXTERNAL_STORAGE,
            Manifest.permission.WRITE_EXTERNAL_STORAGE,
            Manifest.permission.ACCESS_FINE_LOCATION
    };

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        Button sensorTestBtn = findViewById(R.id.btn_sensorTest);
        Button dataSetBtn = findViewById(R.id.btn_dataSet);
        Button rtBtn = findViewById(R.id.btn_rt);
        Button rollBackBtn = findViewById(R.id.btn_rollback);
        sensorTestBtn.setOnClickListener(this);
        dataSetBtn.setOnClickListener(this);
        rtBtn.setOnClickListener(this);
        rollBackBtn.setOnClickListener(this);

        checkPermission();

        OkHttpClient okHttpClient = new OkHttpClient();

        Request request = new Request.Builder()
                .url("http://121.196.150.184:8080/getMap")
                .build();
        Response response = null;
        try {
            response = okHttpClient.newCall(request).execute();
            Log.d("NETWORK", response.body().string());
        } catch (IOException e) {
            e.printStackTrace();
        }


    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.btn_sensorTest:
                startActivity(new Intent(MainActivity.this, SensorTestActivity.class));
                break;
            case R.id.btn_dataSet:
                startActivity(new Intent(MainActivity.this, DatasetActivity.class));
                break;
            case R.id.btn_rt:
                startActivity(new Intent(MainActivity.this, RealtimeActivity.class));
                break;
            case R.id.btn_rollback:
                startActivity(new Intent(MainActivity.this, RollbackActivity.class));
                break;
        }
    }

    private void checkPermission() {
        //检查权限（NEED_PERMISSION）是否被授权 PackageManager.PERMISSION_GRANTED表示同意授权
        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE)
                != PackageManager.PERMISSION_GRANTED ||
                ContextCompat.checkSelfPermission(this,
                        android.Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
            //申请权限
            ActivityCompat.requestPermissions(
                    this,
                    PERMISSIONS,
                    REQUEST_CODE
            );
        } else {
            //Toast.makeText(this, "授权成功！", Toast.LENGTH_SHORT).show();
            Log.i(TAG, "checkPermission: 已经授权！");
        }
        //用户已经拒绝过一次，再次弹出权限申请对话框需要给用户一个解释
        if (ActivityCompat.shouldShowRequestPermissionRationale(this, Manifest.permission
                .WRITE_EXTERNAL_STORAGE)) {
            Toast.makeText(this, "请开通相关权限，否则无法正常使用本应用！", Toast.LENGTH_SHORT).show();
        }
    }
}
